import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {
	
	
    public static void miniMaxSum(List<Integer> arr) {
    // Write your code here
    	List<Integer> newArray = new ArrayList<Integer>();
        long[] i;
        if (1 <= arr[] <= 10^9) {
            newArray.add(arr.get(1) + arr.get(2) + arr.get(3) + arr.get(4));
            newArray.add(arr.get(0) + arr.get(2) + arr.get(3) + arr.get(4));
            newArray.add(arr.get(0) + arr.get(1) + arr.get(3) + arr.get(4));
            newArray.add(arr.get(0) + arr.get(1) + arr.get(2) + arr.get(4));
            newArray.add(arr.get(0) + arr.get(1) + arr.get(2) + arr.get(3));
            Collections.sort(newArray);
        } 
        System.out.println(newArray.get(0) + " " + newArray.get(4));
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}