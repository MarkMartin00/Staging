import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {
	
	
    public static void miniMaxSum(List<Integer> arr) {
    // Write your code here
    	List<Long> newArray = LinkedList<Long>();
        
        if (1 <= arr[i] <= 10^9) {
            newArray.push(arr[1] + arr[2] + arr[3] + arr[4]);
            newArray.push(arr[0] + arr[2] + arr[3] + arr[4]);
            newArray.push(arr[0] + arr[1] + arr[3] + arr[4]);
            newArray.push(arr[0] + arr[1] + arr[2] + arr[4]);
            newArray.push(arr[0] + arr[1] + arr[2] + arr[3]);
            newArray.sort();
        } 
        System.out.println(newArray[0], newArray[4]);
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}